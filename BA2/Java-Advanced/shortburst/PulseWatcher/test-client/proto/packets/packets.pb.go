// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        v4.25.1
// source: packets.proto

package packets

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ClientType int32

const (
	ClientType_API_CLIENT    ClientType = 0
	ClientType_WEB_CLIENT    ClientType = 1
	ClientType_DC_BOT_CLIENT ClientType = 2
)

// Enum value maps for ClientType.
var (
	ClientType_name = map[int32]string{
		0: "API_CLIENT",
		1: "WEB_CLIENT",
		2: "DC_BOT_CLIENT",
	}
	ClientType_value = map[string]int32{
		"API_CLIENT":    0,
		"WEB_CLIENT":    1,
		"DC_BOT_CLIENT": 2,
	}
)

func (x ClientType) Enum() *ClientType {
	p := new(ClientType)
	*p = x
	return p
}

func (x ClientType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ClientType) Descriptor() protoreflect.EnumDescriptor {
	return file_packets_proto_enumTypes[0].Descriptor()
}

func (ClientType) Type() protoreflect.EnumType {
	return &file_packets_proto_enumTypes[0]
}

func (x ClientType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ClientType.Descriptor instead.
func (ClientType) EnumDescriptor() ([]byte, []int) {
	return file_packets_proto_rawDescGZIP(), []int{0}
}

type S2CPacket struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Packet:
	//
	//	*S2CPacket_RegisterPacket
	//	*S2CPacket_PingPacket
	//	*S2CPacket_MetricPacket
	//	*S2CPacket_ChangeConfigPacket
	Packet isS2CPacket_Packet `protobuf_oneof:"packet"`
}

func (x *S2CPacket) Reset() {
	*x = S2CPacket{}
	if protoimpl.UnsafeEnabled {
		mi := &file_packets_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *S2CPacket) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*S2CPacket) ProtoMessage() {}

func (x *S2CPacket) ProtoReflect() protoreflect.Message {
	mi := &file_packets_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use S2CPacket.ProtoReflect.Descriptor instead.
func (*S2CPacket) Descriptor() ([]byte, []int) {
	return file_packets_proto_rawDescGZIP(), []int{0}
}

func (m *S2CPacket) GetPacket() isS2CPacket_Packet {
	if m != nil {
		return m.Packet
	}
	return nil
}

func (x *S2CPacket) GetRegisterPacket() *S2CRegisterPacket {
	if x, ok := x.GetPacket().(*S2CPacket_RegisterPacket); ok {
		return x.RegisterPacket
	}
	return nil
}

func (x *S2CPacket) GetPingPacket() *S2CPingPacket {
	if x, ok := x.GetPacket().(*S2CPacket_PingPacket); ok {
		return x.PingPacket
	}
	return nil
}

func (x *S2CPacket) GetMetricPacket() *S2CMetricPacket {
	if x, ok := x.GetPacket().(*S2CPacket_MetricPacket); ok {
		return x.MetricPacket
	}
	return nil
}

func (x *S2CPacket) GetChangeConfigPacket() *S2CChangeConfigPacket {
	if x, ok := x.GetPacket().(*S2CPacket_ChangeConfigPacket); ok {
		return x.ChangeConfigPacket
	}
	return nil
}

type isS2CPacket_Packet interface {
	isS2CPacket_Packet()
}

type S2CPacket_RegisterPacket struct {
	RegisterPacket *S2CRegisterPacket `protobuf:"bytes,1,opt,name=registerPacket,proto3,oneof"`
}

type S2CPacket_PingPacket struct {
	PingPacket *S2CPingPacket `protobuf:"bytes,2,opt,name=pingPacket,proto3,oneof"`
}

type S2CPacket_MetricPacket struct {
	MetricPacket *S2CMetricPacket `protobuf:"bytes,3,opt,name=metricPacket,proto3,oneof"`
}

type S2CPacket_ChangeConfigPacket struct {
	ChangeConfigPacket *S2CChangeConfigPacket `protobuf:"bytes,4,opt,name=changeConfigPacket,proto3,oneof"`
}

func (*S2CPacket_RegisterPacket) isS2CPacket_Packet() {}

func (*S2CPacket_PingPacket) isS2CPacket_Packet() {}

func (*S2CPacket_MetricPacket) isS2CPacket_Packet() {}

func (*S2CPacket_ChangeConfigPacket) isS2CPacket_Packet() {}

type C2SPacket struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Token string `protobuf:"bytes,1,opt,name=token,proto3" json:"token,omitempty"`
	// Types that are assignable to Packet:
	//
	//	*C2SPacket_RegisterPacket
	//	*C2SPacket_PingPacket
	//	*C2SPacket_MetricPacket
	Packet isC2SPacket_Packet `protobuf_oneof:"packet"`
}

func (x *C2SPacket) Reset() {
	*x = C2SPacket{}
	if protoimpl.UnsafeEnabled {
		mi := &file_packets_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *C2SPacket) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*C2SPacket) ProtoMessage() {}

func (x *C2SPacket) ProtoReflect() protoreflect.Message {
	mi := &file_packets_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use C2SPacket.ProtoReflect.Descriptor instead.
func (*C2SPacket) Descriptor() ([]byte, []int) {
	return file_packets_proto_rawDescGZIP(), []int{1}
}

func (x *C2SPacket) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

func (m *C2SPacket) GetPacket() isC2SPacket_Packet {
	if m != nil {
		return m.Packet
	}
	return nil
}

func (x *C2SPacket) GetRegisterPacket() *C2SRegisterPacket {
	if x, ok := x.GetPacket().(*C2SPacket_RegisterPacket); ok {
		return x.RegisterPacket
	}
	return nil
}

func (x *C2SPacket) GetPingPacket() *C2SPingPacket {
	if x, ok := x.GetPacket().(*C2SPacket_PingPacket); ok {
		return x.PingPacket
	}
	return nil
}

func (x *C2SPacket) GetMetricPacket() *C2SMetricPacket {
	if x, ok := x.GetPacket().(*C2SPacket_MetricPacket); ok {
		return x.MetricPacket
	}
	return nil
}

type isC2SPacket_Packet interface {
	isC2SPacket_Packet()
}

type C2SPacket_RegisterPacket struct {
	RegisterPacket *C2SRegisterPacket `protobuf:"bytes,2,opt,name=registerPacket,proto3,oneof"`
}

type C2SPacket_PingPacket struct {
	PingPacket *C2SPingPacket `protobuf:"bytes,3,opt,name=pingPacket,proto3,oneof"`
}

type C2SPacket_MetricPacket struct {
	MetricPacket *C2SMetricPacket `protobuf:"bytes,4,opt,name=metricPacket,proto3,oneof"`
}

func (*C2SPacket_RegisterPacket) isC2SPacket_Packet() {}

func (*C2SPacket_PingPacket) isC2SPacket_Packet() {}

func (*C2SPacket_MetricPacket) isC2SPacket_Packet() {}

type S2CRegisterPacket struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Token string `protobuf:"bytes,1,opt,name=token,proto3" json:"token,omitempty"`
}

func (x *S2CRegisterPacket) Reset() {
	*x = S2CRegisterPacket{}
	if protoimpl.UnsafeEnabled {
		mi := &file_packets_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *S2CRegisterPacket) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*S2CRegisterPacket) ProtoMessage() {}

func (x *S2CRegisterPacket) ProtoReflect() protoreflect.Message {
	mi := &file_packets_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use S2CRegisterPacket.ProtoReflect.Descriptor instead.
func (*S2CRegisterPacket) Descriptor() ([]byte, []int) {
	return file_packets_proto_rawDescGZIP(), []int{2}
}

func (x *S2CRegisterPacket) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

type C2SRegisterPacket struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Token      string     `protobuf:"bytes,1,opt,name=token,proto3" json:"token,omitempty"`
	Name       string     `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Config     *C2SConfig `protobuf:"bytes,3,opt,name=config,proto3" json:"config,omitempty"`
	ClientType ClientType `protobuf:"varint,4,opt,name=clientType,proto3,enum=art.ameliah.pulsewatcher.ClientType" json:"clientType,omitempty"`
}

func (x *C2SRegisterPacket) Reset() {
	*x = C2SRegisterPacket{}
	if protoimpl.UnsafeEnabled {
		mi := &file_packets_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *C2SRegisterPacket) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*C2SRegisterPacket) ProtoMessage() {}

func (x *C2SRegisterPacket) ProtoReflect() protoreflect.Message {
	mi := &file_packets_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use C2SRegisterPacket.ProtoReflect.Descriptor instead.
func (*C2SRegisterPacket) Descriptor() ([]byte, []int) {
	return file_packets_proto_rawDescGZIP(), []int{3}
}

func (x *C2SRegisterPacket) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

func (x *C2SRegisterPacket) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *C2SRegisterPacket) GetConfig() *C2SConfig {
	if x != nil {
		return x.Config
	}
	return nil
}

func (x *C2SRegisterPacket) GetClientType() ClientType {
	if x != nil {
		return x.ClientType
	}
	return ClientType_API_CLIENT
}

type C2SConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Fields        []*ConfigField        `protobuf:"bytes,1,rep,name=fields,proto3" json:"fields,omitempty"`
	MutableFields []*MutableConfigField `protobuf:"bytes,2,rep,name=mutableFields,proto3" json:"mutableFields,omitempty"`
}

func (x *C2SConfig) Reset() {
	*x = C2SConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_packets_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *C2SConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*C2SConfig) ProtoMessage() {}

func (x *C2SConfig) ProtoReflect() protoreflect.Message {
	mi := &file_packets_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use C2SConfig.ProtoReflect.Descriptor instead.
func (*C2SConfig) Descriptor() ([]byte, []int) {
	return file_packets_proto_rawDescGZIP(), []int{4}
}

func (x *C2SConfig) GetFields() []*ConfigField {
	if x != nil {
		return x.Fields
	}
	return nil
}

func (x *C2SConfig) GetMutableFields() []*MutableConfigField {
	if x != nil {
		return x.MutableFields
	}
	return nil
}

type ConfigField struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name  string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Value string `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *ConfigField) Reset() {
	*x = ConfigField{}
	if protoimpl.UnsafeEnabled {
		mi := &file_packets_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConfigField) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConfigField) ProtoMessage() {}

func (x *ConfigField) ProtoReflect() protoreflect.Message {
	mi := &file_packets_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConfigField.ProtoReflect.Descriptor instead.
func (*ConfigField) Descriptor() ([]byte, []int) {
	return file_packets_proto_rawDescGZIP(), []int{5}
}

func (x *ConfigField) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ConfigField) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

type MutableConfigField struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name         string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	CurrentValue string `protobuf:"bytes,2,opt,name=currentValue,proto3" json:"currentValue,omitempty"`
}

func (x *MutableConfigField) Reset() {
	*x = MutableConfigField{}
	if protoimpl.UnsafeEnabled {
		mi := &file_packets_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MutableConfigField) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MutableConfigField) ProtoMessage() {}

func (x *MutableConfigField) ProtoReflect() protoreflect.Message {
	mi := &file_packets_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MutableConfigField.ProtoReflect.Descriptor instead.
func (*MutableConfigField) Descriptor() ([]byte, []int) {
	return file_packets_proto_rawDescGZIP(), []int{6}
}

func (x *MutableConfigField) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *MutableConfigField) GetCurrentValue() string {
	if x != nil {
		return x.CurrentValue
	}
	return ""
}

type S2CChangeConfigPacket struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ConfigField *MutableConfigField `protobuf:"bytes,1,opt,name=configField,proto3" json:"configField,omitempty"`
}

func (x *S2CChangeConfigPacket) Reset() {
	*x = S2CChangeConfigPacket{}
	if protoimpl.UnsafeEnabled {
		mi := &file_packets_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *S2CChangeConfigPacket) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*S2CChangeConfigPacket) ProtoMessage() {}

func (x *S2CChangeConfigPacket) ProtoReflect() protoreflect.Message {
	mi := &file_packets_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use S2CChangeConfigPacket.ProtoReflect.Descriptor instead.
func (*S2CChangeConfigPacket) Descriptor() ([]byte, []int) {
	return file_packets_proto_rawDescGZIP(), []int{7}
}

func (x *S2CChangeConfigPacket) GetConfigField() *MutableConfigField {
	if x != nil {
		return x.ConfigField
	}
	return nil
}

type S2CPingPacket struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Timestamp *timestamppb.Timestamp `protobuf:"bytes,1,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
}

func (x *S2CPingPacket) Reset() {
	*x = S2CPingPacket{}
	if protoimpl.UnsafeEnabled {
		mi := &file_packets_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *S2CPingPacket) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*S2CPingPacket) ProtoMessage() {}

func (x *S2CPingPacket) ProtoReflect() protoreflect.Message {
	mi := &file_packets_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use S2CPingPacket.ProtoReflect.Descriptor instead.
func (*S2CPingPacket) Descriptor() ([]byte, []int) {
	return file_packets_proto_rawDescGZIP(), []int{8}
}

func (x *S2CPingPacket) GetTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

type C2SPingPacket struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Timestamp *timestamppb.Timestamp `protobuf:"bytes,1,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
}

func (x *C2SPingPacket) Reset() {
	*x = C2SPingPacket{}
	if protoimpl.UnsafeEnabled {
		mi := &file_packets_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *C2SPingPacket) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*C2SPingPacket) ProtoMessage() {}

func (x *C2SPingPacket) ProtoReflect() protoreflect.Message {
	mi := &file_packets_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use C2SPingPacket.ProtoReflect.Descriptor instead.
func (*C2SPingPacket) Descriptor() ([]byte, []int) {
	return file_packets_proto_rawDescGZIP(), []int{9}
}

func (x *C2SPingPacket) GetTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

type S2CMetricPacket struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *S2CMetricPacket) Reset() {
	*x = S2CMetricPacket{}
	if protoimpl.UnsafeEnabled {
		mi := &file_packets_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *S2CMetricPacket) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*S2CMetricPacket) ProtoMessage() {}

func (x *S2CMetricPacket) ProtoReflect() protoreflect.Message {
	mi := &file_packets_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use S2CMetricPacket.ProtoReflect.Descriptor instead.
func (*S2CMetricPacket) Descriptor() ([]byte, []int) {
	return file_packets_proto_rawDescGZIP(), []int{10}
}

type C2SMetricPacket struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RamUsage int64 `protobuf:"varint,1,opt,name=ramUsage,proto3" json:"ramUsage,omitempty"`
	Uptime   int64 `protobuf:"varint,2,opt,name=uptime,proto3" json:"uptime,omitempty"`
	// Types that are assignable to Metrics:
	//
	//	*C2SMetricPacket_ApiClientMetric
	Metrics isC2SMetricPacket_Metrics `protobuf_oneof:"metrics"`
}

func (x *C2SMetricPacket) Reset() {
	*x = C2SMetricPacket{}
	if protoimpl.UnsafeEnabled {
		mi := &file_packets_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *C2SMetricPacket) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*C2SMetricPacket) ProtoMessage() {}

func (x *C2SMetricPacket) ProtoReflect() protoreflect.Message {
	mi := &file_packets_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use C2SMetricPacket.ProtoReflect.Descriptor instead.
func (*C2SMetricPacket) Descriptor() ([]byte, []int) {
	return file_packets_proto_rawDescGZIP(), []int{11}
}

func (x *C2SMetricPacket) GetRamUsage() int64 {
	if x != nil {
		return x.RamUsage
	}
	return 0
}

func (x *C2SMetricPacket) GetUptime() int64 {
	if x != nil {
		return x.Uptime
	}
	return 0
}

func (m *C2SMetricPacket) GetMetrics() isC2SMetricPacket_Metrics {
	if m != nil {
		return m.Metrics
	}
	return nil
}

func (x *C2SMetricPacket) GetApiClientMetric() *APIClientMetric {
	if x, ok := x.GetMetrics().(*C2SMetricPacket_ApiClientMetric); ok {
		return x.ApiClientMetric
	}
	return nil
}

type isC2SMetricPacket_Metrics interface {
	isC2SMetricPacket_Metrics()
}

type C2SMetricPacket_ApiClientMetric struct {
	ApiClientMetric *APIClientMetric `protobuf:"bytes,3,opt,name=apiClientMetric,proto3,oneof"`
}

func (*C2SMetricPacket_ApiClientMetric) isC2SMetricPacket_Metrics() {}

type APIClientMetric struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Host               string               `protobuf:"bytes,1,opt,name=host,proto3" json:"host,omitempty"`
	Os                 string               `protobuf:"bytes,2,opt,name=os,proto3" json:"os,omitempty"`
	Port               string               `protobuf:"bytes,3,opt,name=port,proto3" json:"port,omitempty"`
	ApiEndPointMetrics []*APIEndPointMetric `protobuf:"bytes,4,rep,name=apiEndPointMetrics,proto3" json:"apiEndPointMetrics,omitempty"`
}

func (x *APIClientMetric) Reset() {
	*x = APIClientMetric{}
	if protoimpl.UnsafeEnabled {
		mi := &file_packets_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *APIClientMetric) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*APIClientMetric) ProtoMessage() {}

func (x *APIClientMetric) ProtoReflect() protoreflect.Message {
	mi := &file_packets_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use APIClientMetric.ProtoReflect.Descriptor instead.
func (*APIClientMetric) Descriptor() ([]byte, []int) {
	return file_packets_proto_rawDescGZIP(), []int{12}
}

func (x *APIClientMetric) GetHost() string {
	if x != nil {
		return x.Host
	}
	return ""
}

func (x *APIClientMetric) GetOs() string {
	if x != nil {
		return x.Os
	}
	return ""
}

func (x *APIClientMetric) GetPort() string {
	if x != nil {
		return x.Port
	}
	return ""
}

func (x *APIClientMetric) GetApiEndPointMetrics() []*APIEndPointMetric {
	if x != nil {
		return x.ApiEndPointMetrics
	}
	return nil
}

type APIEndPointMetric struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EndPoint string `protobuf:"bytes,1,opt,name=endPoint,proto3" json:"endPoint,omitempty"`
	Hits     int64  `protobuf:"varint,2,opt,name=hits,proto3" json:"hits,omitempty"`
	Errors   int64  `protobuf:"varint,3,opt,name=errors,proto3" json:"errors,omitempty"`
}

func (x *APIEndPointMetric) Reset() {
	*x = APIEndPointMetric{}
	if protoimpl.UnsafeEnabled {
		mi := &file_packets_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *APIEndPointMetric) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*APIEndPointMetric) ProtoMessage() {}

func (x *APIEndPointMetric) ProtoReflect() protoreflect.Message {
	mi := &file_packets_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use APIEndPointMetric.ProtoReflect.Descriptor instead.
func (*APIEndPointMetric) Descriptor() ([]byte, []int) {
	return file_packets_proto_rawDescGZIP(), []int{13}
}

func (x *APIEndPointMetric) GetEndPoint() string {
	if x != nil {
		return x.EndPoint
	}
	return ""
}

func (x *APIEndPointMetric) GetHits() int64 {
	if x != nil {
		return x.Hits
	}
	return 0
}

func (x *APIEndPointMetric) GetErrors() int64 {
	if x != nil {
		return x.Errors
	}
	return 0
}

var File_packets_proto protoreflect.FileDescriptor

var file_packets_proto_rawDesc = []byte{
	0x0a, 0x0d, 0x70, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x18, 0x61, 0x72, 0x74, 0x2e, 0x61, 0x6d, 0x65, 0x6c, 0x69, 0x61, 0x68, 0x2e, 0x70, 0x75, 0x6c,
	0x73, 0x65, 0x77, 0x61, 0x74, 0x63, 0x68, 0x65, 0x72, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xeb, 0x02, 0x0a, 0x09, 0x53,
	0x32, 0x43, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x12, 0x55, 0x0a, 0x0e, 0x72, 0x65, 0x67, 0x69,
	0x73, 0x74, 0x65, 0x72, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x2b, 0x2e, 0x61, 0x72, 0x74, 0x2e, 0x61, 0x6d, 0x65, 0x6c, 0x69, 0x61, 0x68, 0x2e, 0x70,
	0x75, 0x6c, 0x73, 0x65, 0x77, 0x61, 0x74, 0x63, 0x68, 0x65, 0x72, 0x2e, 0x53, 0x32, 0x43, 0x52,
	0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x48, 0x00, 0x52,
	0x0e, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x12,
	0x49, 0x0a, 0x0a, 0x70, 0x69, 0x6e, 0x67, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x61, 0x72, 0x74, 0x2e, 0x61, 0x6d, 0x65, 0x6c, 0x69, 0x61,
	0x68, 0x2e, 0x70, 0x75, 0x6c, 0x73, 0x65, 0x77, 0x61, 0x74, 0x63, 0x68, 0x65, 0x72, 0x2e, 0x53,
	0x32, 0x43, 0x50, 0x69, 0x6e, 0x67, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x48, 0x00, 0x52, 0x0a,
	0x70, 0x69, 0x6e, 0x67, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x12, 0x4f, 0x0a, 0x0c, 0x6d, 0x65,
	0x74, 0x72, 0x69, 0x63, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x29, 0x2e, 0x61, 0x72, 0x74, 0x2e, 0x61, 0x6d, 0x65, 0x6c, 0x69, 0x61, 0x68, 0x2e, 0x70,
	0x75, 0x6c, 0x73, 0x65, 0x77, 0x61, 0x74, 0x63, 0x68, 0x65, 0x72, 0x2e, 0x53, 0x32, 0x43, 0x4d,
	0x65, 0x74, 0x72, 0x69, 0x63, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x48, 0x00, 0x52, 0x0c, 0x6d,
	0x65, 0x74, 0x72, 0x69, 0x63, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x12, 0x61, 0x0a, 0x12, 0x63,
	0x68, 0x61, 0x6e, 0x67, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x50, 0x61, 0x63, 0x6b, 0x65,
	0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2f, 0x2e, 0x61, 0x72, 0x74, 0x2e, 0x61, 0x6d,
	0x65, 0x6c, 0x69, 0x61, 0x68, 0x2e, 0x70, 0x75, 0x6c, 0x73, 0x65, 0x77, 0x61, 0x74, 0x63, 0x68,
	0x65, 0x72, 0x2e, 0x53, 0x32, 0x43, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x48, 0x00, 0x52, 0x12, 0x63, 0x68, 0x61, 0x6e,
	0x67, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x42, 0x08,
	0x0a, 0x06, 0x70, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x22, 0x9e, 0x02, 0x0a, 0x09, 0x43, 0x32, 0x53,
	0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x55, 0x0a, 0x0e,
	0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x61, 0x72, 0x74, 0x2e, 0x61, 0x6d, 0x65, 0x6c, 0x69,
	0x61, 0x68, 0x2e, 0x70, 0x75, 0x6c, 0x73, 0x65, 0x77, 0x61, 0x74, 0x63, 0x68, 0x65, 0x72, 0x2e,
	0x43, 0x32, 0x53, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x50, 0x61, 0x63, 0x6b, 0x65,
	0x74, 0x48, 0x00, 0x52, 0x0e, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x50, 0x61, 0x63,
	0x6b, 0x65, 0x74, 0x12, 0x49, 0x0a, 0x0a, 0x70, 0x69, 0x6e, 0x67, 0x50, 0x61, 0x63, 0x6b, 0x65,
	0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x61, 0x72, 0x74, 0x2e, 0x61, 0x6d,
	0x65, 0x6c, 0x69, 0x61, 0x68, 0x2e, 0x70, 0x75, 0x6c, 0x73, 0x65, 0x77, 0x61, 0x74, 0x63, 0x68,
	0x65, 0x72, 0x2e, 0x43, 0x32, 0x53, 0x50, 0x69, 0x6e, 0x67, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74,
	0x48, 0x00, 0x52, 0x0a, 0x70, 0x69, 0x6e, 0x67, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x12, 0x4f,
	0x0a, 0x0c, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x61, 0x72, 0x74, 0x2e, 0x61, 0x6d, 0x65, 0x6c, 0x69,
	0x61, 0x68, 0x2e, 0x70, 0x75, 0x6c, 0x73, 0x65, 0x77, 0x61, 0x74, 0x63, 0x68, 0x65, 0x72, 0x2e,
	0x43, 0x32, 0x53, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x48,
	0x00, 0x52, 0x0c, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x42,
	0x08, 0x0a, 0x06, 0x70, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x22, 0x29, 0x0a, 0x11, 0x53, 0x32, 0x43,
	0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x12, 0x14,
	0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74,
	0x6f, 0x6b, 0x65, 0x6e, 0x22, 0xc0, 0x01, 0x0a, 0x11, 0x43, 0x32, 0x53, 0x52, 0x65, 0x67, 0x69,
	0x73, 0x74, 0x65, 0x72, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f,
	0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e,
	0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x12, 0x3b, 0x0a, 0x06, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x61, 0x72, 0x74, 0x2e, 0x61, 0x6d, 0x65, 0x6c, 0x69,
	0x61, 0x68, 0x2e, 0x70, 0x75, 0x6c, 0x73, 0x65, 0x77, 0x61, 0x74, 0x63, 0x68, 0x65, 0x72, 0x2e,
	0x43, 0x32, 0x53, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x06, 0x63, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x12, 0x44, 0x0a, 0x0a, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x24, 0x2e, 0x61, 0x72, 0x74, 0x2e, 0x61, 0x6d, 0x65, 0x6c,
	0x69, 0x61, 0x68, 0x2e, 0x70, 0x75, 0x6c, 0x73, 0x65, 0x77, 0x61, 0x74, 0x63, 0x68, 0x65, 0x72,
	0x2e, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0a, 0x63, 0x6c, 0x69,
	0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x22, 0x9e, 0x01, 0x0a, 0x09, 0x43, 0x32, 0x53, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x3d, 0x0a, 0x06, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x61, 0x72, 0x74, 0x2e, 0x61, 0x6d, 0x65, 0x6c,
	0x69, 0x61, 0x68, 0x2e, 0x70, 0x75, 0x6c, 0x73, 0x65, 0x77, 0x61, 0x74, 0x63, 0x68, 0x65, 0x72,
	0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x52, 0x06, 0x66, 0x69,
	0x65, 0x6c, 0x64, 0x73, 0x12, 0x52, 0x0a, 0x0d, 0x6d, 0x75, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x46,
	0x69, 0x65, 0x6c, 0x64, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x61, 0x72,
	0x74, 0x2e, 0x61, 0x6d, 0x65, 0x6c, 0x69, 0x61, 0x68, 0x2e, 0x70, 0x75, 0x6c, 0x73, 0x65, 0x77,
	0x61, 0x74, 0x63, 0x68, 0x65, 0x72, 0x2e, 0x4d, 0x75, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x43, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x52, 0x0d, 0x6d, 0x75, 0x74, 0x61, 0x62,
	0x6c, 0x65, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x22, 0x37, 0x0a, 0x0b, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x22, 0x4c, 0x0a, 0x12, 0x4d, 0x75, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x63,
	0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0c, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x22,
	0x67, 0x0a, 0x15, 0x53, 0x32, 0x43, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x12, 0x4e, 0x0a, 0x0b, 0x63, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2c, 0x2e,
	0x61, 0x72, 0x74, 0x2e, 0x61, 0x6d, 0x65, 0x6c, 0x69, 0x61, 0x68, 0x2e, 0x70, 0x75, 0x6c, 0x73,
	0x65, 0x77, 0x61, 0x74, 0x63, 0x68, 0x65, 0x72, 0x2e, 0x4d, 0x75, 0x74, 0x61, 0x62, 0x6c, 0x65,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x52, 0x0b, 0x63, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x22, 0x49, 0x0a, 0x0d, 0x53, 0x32, 0x43, 0x50,
	0x69, 0x6e, 0x67, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x12, 0x38, 0x0a, 0x09, 0x74, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x22, 0x49, 0x0a, 0x0d, 0x43, 0x32, 0x53, 0x50, 0x69, 0x6e, 0x67, 0x50, 0x61,
	0x63, 0x6b, 0x65, 0x74, 0x12, 0x38, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x22, 0x11,
	0x0a, 0x0f, 0x53, 0x32, 0x43, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x50, 0x61, 0x63, 0x6b, 0x65,
	0x74, 0x22, 0xa7, 0x01, 0x0a, 0x0f, 0x43, 0x32, 0x53, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x50,
	0x61, 0x63, 0x6b, 0x65, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x72, 0x61, 0x6d, 0x55, 0x73, 0x61, 0x67,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x72, 0x61, 0x6d, 0x55, 0x73, 0x61, 0x67,
	0x65, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x70, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x06, 0x75, 0x70, 0x74, 0x69, 0x6d, 0x65, 0x12, 0x55, 0x0a, 0x0f, 0x61, 0x70, 0x69,
	0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x29, 0x2e, 0x61, 0x72, 0x74, 0x2e, 0x61, 0x6d, 0x65, 0x6c, 0x69, 0x61, 0x68,
	0x2e, 0x70, 0x75, 0x6c, 0x73, 0x65, 0x77, 0x61, 0x74, 0x63, 0x68, 0x65, 0x72, 0x2e, 0x41, 0x50,
	0x49, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x48, 0x00, 0x52,
	0x0f, 0x61, 0x70, 0x69, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63,
	0x42, 0x09, 0x0a, 0x07, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x22, 0xa6, 0x01, 0x0a, 0x0f,
	0x41, 0x50, 0x49, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x12,
	0x12, 0x0a, 0x04, 0x68, 0x6f, 0x73, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x68,
	0x6f, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x6f, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x02, 0x6f, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x6f, 0x72, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x70, 0x6f, 0x72, 0x74, 0x12, 0x5b, 0x0a, 0x12, 0x61, 0x70, 0x69, 0x45, 0x6e,
	0x64, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x18, 0x04, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x61, 0x72, 0x74, 0x2e, 0x61, 0x6d, 0x65, 0x6c, 0x69, 0x61,
	0x68, 0x2e, 0x70, 0x75, 0x6c, 0x73, 0x65, 0x77, 0x61, 0x74, 0x63, 0x68, 0x65, 0x72, 0x2e, 0x41,
	0x50, 0x49, 0x45, 0x6e, 0x64, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63,
	0x52, 0x12, 0x61, 0x70, 0x69, 0x45, 0x6e, 0x64, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x4d, 0x65, 0x74,
	0x72, 0x69, 0x63, 0x73, 0x22, 0x5b, 0x0a, 0x11, 0x41, 0x50, 0x49, 0x45, 0x6e, 0x64, 0x50, 0x6f,
	0x69, 0x6e, 0x74, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x12, 0x1a, 0x0a, 0x08, 0x65, 0x6e, 0x64,
	0x50, 0x6f, 0x69, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x65, 0x6e, 0x64,
	0x50, 0x6f, 0x69, 0x6e, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x68, 0x69, 0x74, 0x73, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x04, 0x68, 0x69, 0x74, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x65, 0x72, 0x72,
	0x6f, 0x72, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x65, 0x72, 0x72, 0x6f, 0x72,
	0x73, 0x2a, 0x3f, 0x0a, 0x0a, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12,
	0x0e, 0x0a, 0x0a, 0x41, 0x50, 0x49, 0x5f, 0x43, 0x4c, 0x49, 0x45, 0x4e, 0x54, 0x10, 0x00, 0x12,
	0x0e, 0x0a, 0x0a, 0x57, 0x45, 0x42, 0x5f, 0x43, 0x4c, 0x49, 0x45, 0x4e, 0x54, 0x10, 0x01, 0x12,
	0x11, 0x0a, 0x0d, 0x44, 0x43, 0x5f, 0x42, 0x4f, 0x54, 0x5f, 0x43, 0x4c, 0x49, 0x45, 0x4e, 0x54,
	0x10, 0x02, 0x42, 0x3a, 0x0a, 0x1e, 0x61, 0x72, 0x74, 0x2e, 0x61, 0x6d, 0x65, 0x6c, 0x69, 0x61,
	0x68, 0x2e, 0x70, 0x75, 0x6c, 0x73, 0x65, 0x77, 0x61, 0x74, 0x63, 0x68, 0x65, 0x72, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x42, 0x07, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x50, 0x01, 0x5a,
	0x0d, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x70, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x62, 0x06,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_packets_proto_rawDescOnce sync.Once
	file_packets_proto_rawDescData = file_packets_proto_rawDesc
)

func file_packets_proto_rawDescGZIP() []byte {
	file_packets_proto_rawDescOnce.Do(func() {
		file_packets_proto_rawDescData = protoimpl.X.CompressGZIP(file_packets_proto_rawDescData)
	})
	return file_packets_proto_rawDescData
}

var file_packets_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_packets_proto_msgTypes = make([]protoimpl.MessageInfo, 14)
var file_packets_proto_goTypes = []interface{}{
	(ClientType)(0),               // 0: art.ameliah.pulsewatcher.ClientType
	(*S2CPacket)(nil),             // 1: art.ameliah.pulsewatcher.S2CPacket
	(*C2SPacket)(nil),             // 2: art.ameliah.pulsewatcher.C2SPacket
	(*S2CRegisterPacket)(nil),     // 3: art.ameliah.pulsewatcher.S2CRegisterPacket
	(*C2SRegisterPacket)(nil),     // 4: art.ameliah.pulsewatcher.C2SRegisterPacket
	(*C2SConfig)(nil),             // 5: art.ameliah.pulsewatcher.C2SConfig
	(*ConfigField)(nil),           // 6: art.ameliah.pulsewatcher.ConfigField
	(*MutableConfigField)(nil),    // 7: art.ameliah.pulsewatcher.MutableConfigField
	(*S2CChangeConfigPacket)(nil), // 8: art.ameliah.pulsewatcher.S2CChangeConfigPacket
	(*S2CPingPacket)(nil),         // 9: art.ameliah.pulsewatcher.S2CPingPacket
	(*C2SPingPacket)(nil),         // 10: art.ameliah.pulsewatcher.C2SPingPacket
	(*S2CMetricPacket)(nil),       // 11: art.ameliah.pulsewatcher.S2CMetricPacket
	(*C2SMetricPacket)(nil),       // 12: art.ameliah.pulsewatcher.C2SMetricPacket
	(*APIClientMetric)(nil),       // 13: art.ameliah.pulsewatcher.APIClientMetric
	(*APIEndPointMetric)(nil),     // 14: art.ameliah.pulsewatcher.APIEndPointMetric
	(*timestamppb.Timestamp)(nil), // 15: google.protobuf.Timestamp
}
var file_packets_proto_depIdxs = []int32{
	3,  // 0: art.ameliah.pulsewatcher.S2CPacket.registerPacket:type_name -> art.ameliah.pulsewatcher.S2CRegisterPacket
	9,  // 1: art.ameliah.pulsewatcher.S2CPacket.pingPacket:type_name -> art.ameliah.pulsewatcher.S2CPingPacket
	11, // 2: art.ameliah.pulsewatcher.S2CPacket.metricPacket:type_name -> art.ameliah.pulsewatcher.S2CMetricPacket
	8,  // 3: art.ameliah.pulsewatcher.S2CPacket.changeConfigPacket:type_name -> art.ameliah.pulsewatcher.S2CChangeConfigPacket
	4,  // 4: art.ameliah.pulsewatcher.C2SPacket.registerPacket:type_name -> art.ameliah.pulsewatcher.C2SRegisterPacket
	10, // 5: art.ameliah.pulsewatcher.C2SPacket.pingPacket:type_name -> art.ameliah.pulsewatcher.C2SPingPacket
	12, // 6: art.ameliah.pulsewatcher.C2SPacket.metricPacket:type_name -> art.ameliah.pulsewatcher.C2SMetricPacket
	5,  // 7: art.ameliah.pulsewatcher.C2SRegisterPacket.config:type_name -> art.ameliah.pulsewatcher.C2SConfig
	0,  // 8: art.ameliah.pulsewatcher.C2SRegisterPacket.clientType:type_name -> art.ameliah.pulsewatcher.ClientType
	6,  // 9: art.ameliah.pulsewatcher.C2SConfig.fields:type_name -> art.ameliah.pulsewatcher.ConfigField
	7,  // 10: art.ameliah.pulsewatcher.C2SConfig.mutableFields:type_name -> art.ameliah.pulsewatcher.MutableConfigField
	7,  // 11: art.ameliah.pulsewatcher.S2CChangeConfigPacket.configField:type_name -> art.ameliah.pulsewatcher.MutableConfigField
	15, // 12: art.ameliah.pulsewatcher.S2CPingPacket.timestamp:type_name -> google.protobuf.Timestamp
	15, // 13: art.ameliah.pulsewatcher.C2SPingPacket.timestamp:type_name -> google.protobuf.Timestamp
	13, // 14: art.ameliah.pulsewatcher.C2SMetricPacket.apiClientMetric:type_name -> art.ameliah.pulsewatcher.APIClientMetric
	14, // 15: art.ameliah.pulsewatcher.APIClientMetric.apiEndPointMetrics:type_name -> art.ameliah.pulsewatcher.APIEndPointMetric
	16, // [16:16] is the sub-list for method output_type
	16, // [16:16] is the sub-list for method input_type
	16, // [16:16] is the sub-list for extension type_name
	16, // [16:16] is the sub-list for extension extendee
	0,  // [0:16] is the sub-list for field type_name
}

func init() { file_packets_proto_init() }
func file_packets_proto_init() {
	if File_packets_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_packets_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*S2CPacket); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_packets_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*C2SPacket); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_packets_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*S2CRegisterPacket); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_packets_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*C2SRegisterPacket); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_packets_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*C2SConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_packets_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConfigField); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_packets_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MutableConfigField); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_packets_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*S2CChangeConfigPacket); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_packets_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*S2CPingPacket); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_packets_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*C2SPingPacket); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_packets_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*S2CMetricPacket); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_packets_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*C2SMetricPacket); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_packets_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*APIClientMetric); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_packets_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*APIEndPointMetric); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_packets_proto_msgTypes[0].OneofWrappers = []interface{}{
		(*S2CPacket_RegisterPacket)(nil),
		(*S2CPacket_PingPacket)(nil),
		(*S2CPacket_MetricPacket)(nil),
		(*S2CPacket_ChangeConfigPacket)(nil),
	}
	file_packets_proto_msgTypes[1].OneofWrappers = []interface{}{
		(*C2SPacket_RegisterPacket)(nil),
		(*C2SPacket_PingPacket)(nil),
		(*C2SPacket_MetricPacket)(nil),
	}
	file_packets_proto_msgTypes[11].OneofWrappers = []interface{}{
		(*C2SMetricPacket_ApiClientMetric)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_packets_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   14,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_packets_proto_goTypes,
		DependencyIndexes: file_packets_proto_depIdxs,
		EnumInfos:         file_packets_proto_enumTypes,
		MessageInfos:      file_packets_proto_msgTypes,
	}.Build()
	File_packets_proto = out.File
	file_packets_proto_rawDesc = nil
	file_packets_proto_goTypes = nil
	file_packets_proto_depIdxs = nil
}
